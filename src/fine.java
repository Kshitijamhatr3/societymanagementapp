
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class fine extends javax.swing.JFrame {

    /**
     * Creates new form fine
     */
    int rnum;
    public fine() {
        initComponents();
        this.setLocationRelativeTo(null);
         displayInJtable();
    }
     public Connection getConnection()
    {
        Connection con;
        try{
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/logindetails","root","hazzaforever");
        return con;
        }
        catch(Exception e){
         e.printStackTrace();
         return null;
        }
    }
     public ArrayList<fineamount> getUList(){
     ArrayList<fineamount> usersList=new ArrayList<fineamount>();
     Connection con=getConnection();
     String query="SELECT * FROM `fineamount`";
     Statement st;
     ResultSet rs;
     try{
         st=con.createStatement();
         rs=st.executeQuery(query);
         fineamount mem;
         while(rs.next()){
             mem=new fineamount(rs.getInt("roomno"),rs.getInt("amount"));
             usersList.add(mem);
         }
    }
     catch(Exception e){
       e.printStackTrace();
     }
     return usersList;
    }
    //display data in jtable
    public void displayInJtable(){
      ArrayList<fineamount> list =getUList();
      DefaultTableModel m=(DefaultTableModel)jTable1.getModel();
      Object[] row=new Object[2];
      for(int i=0;i<list.size();i++){
          row[0]=list.get(i).getId();
          row[1]=list.get(i).getAmount();
          
          m.addRow(row);
      }
    }
     public void sqlQuery(String query,String msg)
    {
      Connection con=getConnection();
      Statement s;
      try{
         s=con.createStatement();
         if((s.executeUpdate(query))==1){
             
             DefaultTableModel m=(DefaultTableModel)jTable1.getModel();
             m.setRowCount(0);
             displayInJtable();
             
             JOptionPane.showMessageDialog(null,"Data "+msg+"Successfull");
         }
         else{
            JOptionPane.showMessageDialog(null,"Data  Not "+msg); 
         }
      }
      catch(Exception e){
         e.printStackTrace(); 
      }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtf_rno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtf_fine = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jb_save = new javax.swing.JButton();
        jb_update = new javax.swing.JButton();
        jb_delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(240, 170, 64));

        jLabel1.setFont(new java.awt.Font("Sitka Small", 1, 36)); // NOI18N
        jLabel1.setText("FINE ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(388, 388, 388)
                .addComponent(jLabel1)
                .addContainerGap(671, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 100, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PROVIDE MEMBER ROOM NUMBER :");

        jtf_rno.setBackground(new java.awt.Color(255, 204, 51));
        jtf_rno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_rnoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("FINE AMOUNT :");

        jtf_fine.setBackground(new java.awt.Color(255, 204, 0));

        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jb_save.setBackground(new java.awt.Color(255, 204, 0));
        jb_save.setText("SAVE");
        jb_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_saveActionPerformed(evt);
            }
        });

        jb_update.setBackground(new java.awt.Color(255, 204, 0));
        jb_update.setText("UPDATE");
        jb_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_updateActionPerformed(evt);
            }
        });

        jb_delete.setBackground(new java.awt.Color(255, 204, 0));
        jb_delete.setText("DELETE");
        jb_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_deleteActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(255, 210, 78));
        jTable1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 153, 153), null, null));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "room number", "fine amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton2.setBackground(new java.awt.Color(102, 255, 102));
        jButton2.setText("REFRESH");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(46, 46, 46)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtf_rno, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                        .addComponent(jtf_fine)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jb_save)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jb_update)
                            .addGap(18, 18, 18)
                            .addComponent(jb_delete))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtf_rno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jtf_fine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jb_save)
                            .addComponent(jb_update)
                            .addComponent(jb_delete))
                        .addGap(39, 39, 39)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       home form=new home();
               form.setVisible(true);
               form.pack();
               form.setLocationRelativeTo(null);
               this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
 
    private void jb_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_saveActionPerformed
       
        if(jtf_rno.getText().trim().equals("") || jtf_fine.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty  !"," WARNING ",2); 
        }
     else if(jtf_rno.getText().trim().equals(rnum)){
         JOptionPane.showMessageDialog(null,"No duplicate value  !"," WARNING ",2); 
        }
     else if(!jtf_fine.getText().matches("-?\\d+(\\.\\d+)?")){
            JOptionPane.showMessageDialog(null,"Enter valid value for fine amount  !"," WARNING ",2);  
        }
     else if(!jtf_rno.getText().matches("-?\\d+(\\.\\d+)?")){
            JOptionPane.showMessageDialog(null,"Enter proper room number  !"," WARNING ",2);  
        }
     else{
          String ka=jtf_rno.getText();
        int ka1=Integer.parseInt(ka);
        try{
         Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/logindetails","root","hazzaforever");
                String s="select * from memberinformation where rommno='"+jtf_rno.getText()+"'";
                PreparedStatement pstmt=con.prepareStatement(s);
                ResultSet rs=pstmt.executeQuery(); 
                if(rs.next()==true){
                  String query= "INSERT INTO `fineamount`(`roomno`, `amount`) VALUES ('"+jtf_rno.getText()+"','"+jtf_fine.getText()+"')";
                   sqlQuery(query," Inserted ! "); 
                }
                else{
                   JOptionPane.showMessageDialog(null,"No such room number exist !"," WARNING ",2);   
                }
                pstmt.close();
            }
        catch(Exception e){
            System.out.println(e);
        }
        
        }
    }//GEN-LAST:event_jb_saveActionPerformed

    private void jb_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_deleteActionPerformed
        if(jtf_rno.getText().trim().equals("") ) {
            JOptionPane.showMessageDialog(null,"Room number Cannot be  !"," WARNING ",2); 
        }
     else{
            String ka=jtf_rno.getText();
        int ka1=Integer.parseInt(ka);
        try{
         Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/logindetails","root","hazzaforever");
                String s="select * from memberinformation where rommno='"+jtf_rno.getText()+"'";
                PreparedStatement pstmt=con.prepareStatement(s);
                ResultSet rs=pstmt.executeQuery(); 
                if(rs.next()==true){
                  String query="DELETE FROM `fineamount` WHERE `roomno`="+jtf_rno.getText()+"";
                  sqlQuery(query," Deleted ! ");
                }
                else{
                   JOptionPane.showMessageDialog(null,"No such room number exist !"," WARNING ",2);   
                }
                pstmt.close();
            }
        catch(Exception e){
            System.out.println(e);
        }

             }
    }//GEN-LAST:event_jb_deleteActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       int jt=jTable1.getSelectedRow();
        TableModel m=jTable1.getModel();
        jtf_rno.setText(m.getValueAt(jt,0).toString());
        jtf_fine.setText(m.getValueAt(jt,1).toString());
       
          
    }//GEN-LAST:event_jTable1MouseClicked

    private void jb_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_updateActionPerformed
       if(jtf_rno.getText().trim().equals("") || jtf_fine.getText().trim().equals("")  ) {
            JOptionPane.showMessageDialog(null,"Fields cannot be empty  !"," WARNING ",2); 
        }
      else{
           String ka=jtf_rno.getText();
        int ka1=Integer.parseInt(ka);
        try{
         Class.forName("com.mysql.jdbc.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/logindetails","root","hazzaforever");
                String s="select * from memberinformation where rommno='"+jtf_rno.getText()+"'";
                PreparedStatement pstmt=con.prepareStatement(s);
                ResultSet rs=pstmt.executeQuery(); 
                if(rs.next()==true){
                  String query="UPDATE fineamount SET amount='"+jtf_fine.getText()+"' WHERE roomno= "+jtf_rno.getText() ;
                   sqlQuery(query,"Value Updated ! ");
                }
                else{
                   JOptionPane.showMessageDialog(null,"No such room number exist !"," WARNING ",2);   
                }
                pstmt.close();
            }
        catch(Exception e){
            System.out.println(e);
        }

      
      }
    }//GEN-LAST:event_jb_updateActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jtf_fine.setText(null);
        jtf_rno.setText(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jtf_rnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_rnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_rnoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jb_delete;
    private javax.swing.JButton jb_save;
    private javax.swing.JButton jb_update;
    private javax.swing.JTextField jtf_fine;
    private javax.swing.JTextField jtf_rno;
    // End of variables declaration//GEN-END:variables
}
